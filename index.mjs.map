{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-restricted-syntax, no-invalid-this */\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from '@stdlib/utils-define-property';\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport setReadOnlyAccessor from '@stdlib/utils-define-nonenumerable-read-only-accessor';\nimport { isPrimitive as isPositive } from '@stdlib/assert-is-positive-number';\nimport entropy from '@stdlib/stats-base-dists-chisquare-entropy';\nimport kurtosis from '@stdlib/stats-base-dists-chisquare-kurtosis';\nimport mean from '@stdlib/stats-base-dists-chisquare-mean';\nimport median from '@stdlib/stats-base-dists-chisquare-median';\nimport mode from '@stdlib/stats-base-dists-chisquare-mode';\nimport skewness from '@stdlib/stats-base-dists-chisquare-skewness';\nimport stdev from '@stdlib/stats-base-dists-chisquare-stdev';\nimport variance from '@stdlib/stats-base-dists-chisquare-variance';\nimport cdf from '@stdlib/stats-base-dists-chisquare-cdf';\nimport mgf from '@stdlib/stats-base-dists-chisquare-mgf';\nimport pdf from '@stdlib/stats-base-dists-chisquare-pdf';\nimport quantile from '@stdlib/stats-base-dists-chisquare-quantile';\nimport format from '@stdlib/error-tools-fmtprodmsg';\n\n\n// FUNCTIONS //\n\n/**\n* Evaluates the cumulative distribution function (CDF).\n*\n* @private\n* @param {number} x - input value\n* @returns {number} evaluated CDF\n*/\nfunction chisquareCDF( x ) {\n\treturn cdf( x, this.k );\n}\n\n/**\n* Evaluates the moment-generating function (MGF).\n*\n* @private\n* @param {number} t - input value\n* @returns {number} evaluated MGF\n*/\nfunction chisquareMGF( t ) {\n\treturn mgf( t, this.k );\n}\n\n/**\n* Evaluates the probability density function (PDF).\n*\n* @private\n* @param {number} x - input value\n* @returns {number} evaluated PDF\n*/\nfunction chisquarePDF( x ) {\n\treturn pdf( x, this.k );\n}\n\n/**\n* Evaluates the quantile function.\n*\n* @private\n* @param {Probability} p - input probability\n* @returns {number} evaluated quantile function\n*/\nfunction chisquareQuantile( p ) {\n\treturn quantile( p, this.k );\n}\n\n\n// MAIN //\n\n/**\n* Chi-squared distribution constructor.\n*\n* @constructor\n* @param {PositiveNumber} [k=1.0] - degrees of freedom\n* @throws {TypeError} `k` must be a positive number\n* @returns {ChiSquare} distribution instance\n*\n* @example\n* var chisquare = new ChiSquare( 1.0 );\n*\n* var y = chisquare.cdf( 0.8 );\n* // returns ~0.629\n*\n* var v = chisquare.mode;\n* // returns 0.0\n*/\nfunction ChiSquare() {\n\tvar k;\n\tif ( !(this instanceof ChiSquare) ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\treturn new ChiSquare();\n\t\t}\n\t\treturn new ChiSquare( arguments[ 0 ] );\n\t}\n\tif ( arguments.length ) {\n\t\tk = arguments[ 0 ];\n\t\tif ( !isPositive( k ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Rate parameter must be a positive number. Value: `%s`.', k ) );\n\t\t}\n\t} else {\n\t\tk = 1.0;\n\t}\n\tdefineProperty( this, 'k', {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'get': function get() {\n\t\t\treturn k;\n\t\t},\n\t\t'set': function set( value ) {\n\t\t\tif ( !isPositive( value ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid assignment. Must be a positive number. Value: `%s`.', value ) );\n\t\t\t}\n\t\t\tk = value;\n\t\t}\n\t});\n\treturn this;\n}\n\n/**\n* Chi-squared distribution differential entropy.\n*\n* @name entropy\n* @memberof ChiSquare.prototype\n* @type {number}\n* @see [differential entropy]{@link https://en.wikipedia.org/wiki/Entropy_%28information_theory%29}\n*\n* @example\n* var chisquare = new ChiSquare( 4.0 );\n*\n* var v = chisquare.entropy;\n* // returns ~2.27\n*/\nsetReadOnlyAccessor( ChiSquare.prototype, 'entropy', function get() {\n\treturn entropy( this.k );\n});\n\n/**\n* Chi-squared distribution excess kurtosis.\n*\n* @name kurtosis\n* @memberof ChiSquare.prototype\n* @type {number}\n* @see [kurtosis]{@link https://en.wikipedia.org/wiki/Kurtosis}\n*\n* @example\n* var chisquare = new ChiSquare( 4.0 );\n*\n* var v = chisquare.kurtosis;\n* // returns 3.0\n*/\nsetReadOnlyAccessor( ChiSquare.prototype, 'kurtosis', function get() {\n\treturn kurtosis( this.k );\n});\n\n/**\n* Chi-squared distribution expected value.\n*\n* @name mean\n* @memberof ChiSquare.prototype\n* @type {number}\n* @see [expected value]{@link https://en.wikipedia.org/wiki/Expected_value}\n*\n* @example\n* var chisquare = new ChiSquare( 4.0 );\n*\n* var v = chisquare.mean;\n* // returns 4.0\n*/\nsetReadOnlyAccessor( ChiSquare.prototype, 'mean', function get() {\n\treturn mean( this.k );\n});\n\n/**\n* Chi-squared distribution median.\n*\n* @name median\n* @memberof ChiSquare.prototype\n* @type {number}\n* @see [median]{@link https://en.wikipedia.org/wiki/Median}\n*\n* @example\n* var chisquare = new ChiSquare( 4.0 );\n*\n* var v = chisquare.median;\n* // returns ~3.357\n*/\nsetReadOnlyAccessor( ChiSquare.prototype, 'median', function get() {\n\treturn median( this.k );\n});\n\n/**\n* Chi-squared distribution mode.\n*\n* @name mode\n* @memberof ChiSquare.prototype\n* @type {number}\n* @see [mode]{@link https://en.wikipedia.org/wiki/Mode_%28statistics%29}\n*\n* @example\n* var chisquare = new ChiSquare( 4.0 );\n*\n* var v = chisquare.mode;\n* // returns 2.0\n*/\nsetReadOnlyAccessor( ChiSquare.prototype, 'mode', function get() {\n\treturn mode( this.k );\n});\n\n/**\n* Chi-squared distribution skewness.\n*\n* @name skewness\n* @memberof ChiSquare.prototype\n* @type {number}\n* @see [skewness]{@link https://en.wikipedia.org/wiki/Skewness}\n*\n* @example\n* var chisquare = new ChiSquare( 4.0 );\n*\n* var v = chisquare.skewness;\n* // returns ~1.414\n*/\nsetReadOnlyAccessor( ChiSquare.prototype, 'skewness', function get() {\n\treturn skewness( this.k );\n});\n\n/**\n* Chi-squared distribution standard deviation.\n*\n* @name stdev\n* @memberof ChiSquare.prototype\n* @type {number}\n* @see [standard deviation]{@link https://en.wikipedia.org/wiki/Standard_deviation}\n*\n* @example\n* var chisquare = new ChiSquare( 4.0 );\n*\n* var v = chisquare.stdev;\n* // returns ~2.828\n*/\nsetReadOnlyAccessor( ChiSquare.prototype, 'stdev', function get() {\n\treturn stdev( this.k );\n});\n\n/**\n* Chi-squared distribution variance.\n*\n* @name variance\n* @memberof ChiSquare.prototype\n* @type {number}\n* @see [variance]{@link https://en.wikipedia.org/wiki/Variance}\n*\n* @example\n* var chisquare = new ChiSquare( 4.0 );\n*\n* var v = chisquare.variance;\n* // returns 8.0\n*/\nsetReadOnlyAccessor( ChiSquare.prototype, 'variance', function get() {\n\treturn variance( this.k );\n});\n\n/**\n* Evaluates the cumulative distribution function (CDF).\n*\n* @name cdf\n* @memberof ChiSquare.prototype\n* @type {Function}\n* @param {number} x - input value\n* @returns {number} evaluated CDF\n* @see [cdf]{@link https://en.wikipedia.org/wiki/Cumulative_distribution_function}\n*\n* @example\n* var chisquare = new ChiSquare( 2.0 );\n*\n* var v = chisquare.cdf( 0.5 );\n* // returns ~0.221\n*/\nsetReadOnly( ChiSquare.prototype, 'cdf', chisquareCDF );\n\n/**\n* Evaluates the moment-generating function (MGF).\n*\n* @name mgf\n* @memberof ChiSquare.prototype\n* @type {Function}\n* @param {number} t - input value\n* @returns {number} evaluated MGF\n* @see [mgf]{@link https://en.wikipedia.org/wiki/Moment-generating_function}\n*\n* @example\n* var chisquare = new ChiSquare( 2.0 );\n*\n* var v = chisquare.mgf( 0.2 );\n* // returns ~1.667\n*/\nsetReadOnly( ChiSquare.prototype, 'mgf', chisquareMGF );\n\n/**\n* Evaluates the probability density function (PDF).\n*\n* @name pdf\n* @memberof ChiSquare.prototype\n* @type {Function}\n* @param {number} x - input value\n* @returns {number} evaluated PDF\n* @see [pdf]{@link https://en.wikipedia.org/wiki/Probability_density_function}\n*\n* @example\n* var chisquare = new ChiSquare( 2.0 );\n*\n* var v = chisquare.pdf( 0.8 );\n* // returns ~0.335\n*/\nsetReadOnly( ChiSquare.prototype, 'pdf', chisquarePDF );\n\n/**\n* Evaluates the quantile function.\n*\n* @name quantile\n* @memberof ChiSquare.prototype\n* @type {Function}\n* @param {Probability} p - input probability\n* @returns {number} evaluated quantile function\n* @see [quantile function]{@link https://en.wikipedia.org/wiki/Quantile_function}\n*\n* @example\n* var chisquare = new ChiSquare( 2.0 );\n*\n* var v = chisquare.quantile( 0.5 );\n* // returns ~1.386\n*/\nsetReadOnly( ChiSquare.prototype, 'quantile', chisquareQuantile );\n\n\n// EXPORTS //\n\nexport default ChiSquare;\n"],"names":["ChiSquare","k","this","arguments","length","isPositive","TypeError","format","defineProperty","configurable","enumerable","get","set","value","setReadOnlyAccessor","prototype","entropy","kurtosis","mean","median","mode","skewness","stdev","variance","setReadOnly","x","cdf","t","mgf","pdf","p","quantile"],"mappings":";;+rDA6GA,SAASA,IACR,IAAIC,EACJ,KAAOC,gBAAgBF,GACtB,OAA0B,IAArBG,UAAUC,OACP,IAAIJ,EAEL,IAAIA,EAAWG,UAAW,IAElC,GAAKA,UAAUC,QAEd,IAAMC,EADNJ,EAAIE,UAAW,IAEd,MAAM,IAAIG,UAAWC,EAAQ,2EAA4EN,SAG1GA,EAAI,EAeL,OAbAO,EAAgBN,KAAM,IAAK,CAC1BO,cAAgB,EAChBC,YAAc,EACdC,IAAO,WACN,OAAOV,CACP,EACDW,IAAO,SAAcC,GACpB,IAAMR,EAAYQ,GACjB,MAAM,IAAIP,UAAWC,EAAQ,8DAA+DM,IAE7FZ,EAAIY,CACJ,IAEKX,IACR,CAgBAY,EAAqBd,EAAUe,UAAW,WAAW,WACpD,OAAOC,EAASd,KAAKD,EACtB,IAgBAa,EAAqBd,EAAUe,UAAW,YAAY,WACrD,OAAOE,EAAUf,KAAKD,EACvB,IAgBAa,EAAqBd,EAAUe,UAAW,QAAQ,WACjD,OAAOG,EAAMhB,KAAKD,EACnB,IAgBAa,EAAqBd,EAAUe,UAAW,UAAU,WACnD,OAAOI,EAAQjB,KAAKD,EACrB,IAgBAa,EAAqBd,EAAUe,UAAW,QAAQ,WACjD,OAAOK,EAAMlB,KAAKD,EACnB,IAgBAa,EAAqBd,EAAUe,UAAW,YAAY,WACrD,OAAOM,EAAUnB,KAAKD,EACvB,IAgBAa,EAAqBd,EAAUe,UAAW,SAAS,WAClD,OAAOO,EAAOpB,KAAKD,EACpB,IAgBAa,EAAqBd,EAAUe,UAAW,YAAY,WACrD,OAAOQ,EAAUrB,KAAKD,EACvB,IAkBAuB,EAAaxB,EAAUe,UAAW,OAzPlC,SAAuBU,GACtB,OAAOC,EAAKD,EAAGvB,KAAKD,EACrB,IAyQAuB,EAAaxB,EAAUe,UAAW,OAhQlC,SAAuBY,GACtB,OAAOC,EAAKD,EAAGzB,KAAKD,EACrB,IAgRAuB,EAAaxB,EAAUe,UAAW,OAvQlC,SAAuBU,GACtB,OAAOI,EAAKJ,EAAGvB,KAAKD,EACrB,IAuRAuB,EAAaxB,EAAUe,UAAW,YA9QlC,SAA4Be,GAC3B,OAAOC,EAAUD,EAAG5B,KAAKD,EAC1B"}